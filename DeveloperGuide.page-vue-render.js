
    var pageVueRenderFn = function anonymous(
) {
with(this){return _c('div',{attrs:{"id":"app"}},[_c('header',{attrs:{"sticky":""}},[_c('navbar',{attrs:{"type":"dark"},scopedSlots:_u([{key:"brand",fn:function(){return [_c('a',{staticClass:"navbar-brand",attrs:{"href":"/tp/index.html","title":"Home"}},[_v("CogniCare")])]},proxy:true},{key:"right",fn:function(){return [_c('li',[_c('form',{staticClass:"navbar-form"},[_c('searchbar',{attrs:{"data":searchData,"placeholder":"Search","on-hit":searchCallback,"menu-align-right":""}})],1)])]},proxy:true}])},[_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/index.html"}},[_v("Home")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/UserGuide.html"}},[_v("User Guide")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/DeveloperGuide.html"}},[_v("Developer Guide")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"/tp/AboutUs.html"}},[_v("About Us")])]),_v(" "),_c('li',[_c('a',{staticClass:"nav-link",attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp","target":"_blank"}},[_c('span',[_c('span',{staticClass:"fab fa-github",attrs:{"aria-hidden":"true"}})])])])])],1),_v(" "),_c('div',{attrs:{"id":"flex-body"}},[_c('overlay-source',{attrs:{"id":"site-nav","tag-name":"nav","to":"site-nav"}},[_c('div',{staticClass:"site-nav-top"},[_c('div',{staticClass:"fw-bold mb-2",staticStyle:{"font-size":"1.25rem"}},[_v("Site Map")])]),_v(" "),_c('div',{staticClass:"nav-component slim-scroll"},[_c('site-nav',[_c('overlay-source',{staticClass:"site-nav-list site-nav-list-root",attrs:{"tag-name":"ul","to":"mb-site-nav"}},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/index.html"}},[_v("Home")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html"}},[_v("User Guide")]),_v(" "),_c('div',{staticClass:"site-nav-dropdown-btn-container"},[_c('i',{staticClass:"site-nav-dropdown-btn-icon site-nav-rotate-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-dropdown-container-open site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#quick-start"}},[_v("Quick Start")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#features"}},[_v("Features")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#faq"}},[_v("FAQ")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/UserGuide.html#faq"}},[_v("Command Summary")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html"}},[_v("Developer Guide")]),_v(" "),_c('div',{staticClass:"site-nav-dropdown-btn-container"},[_c('i',{staticClass:"site-nav-dropdown-btn-icon site-nav-rotate-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-dropdown-container-open site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#acknowledgements"}},[_v("Acknowledgements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#setting-up-getting-started"}},[_v("Setting Up")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#design"}},[_v("Design")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#implementation"}},[_v("Implementation")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops"}},[_v("Documentation, logging, testing, configuration, dev-ops")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#appendix-requirements"}},[_v("Appendix: Requirements")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/DeveloperGuide.html#appendix-instructions-for-manual-testing"}},[_v("Appendix: Instructions for manual testing")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_v("Tutorials\n\n"),_c('div',{staticClass:"site-nav-dropdown-btn-container"},[_c('i',{staticClass:"site-nav-dropdown-btn-icon",attrs:{"onclick":"handleSiteNavClick(this.parentNode.parentNode, false); event.stopPropagation();"}},[_c('span',{staticClass:"glyphicon glyphicon-menu-down",attrs:{"aria-hidden":"true"}})])])]),_c('ul',{staticClass:"site-nav-dropdown-container site-nav-list"},[_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/tutorials/TracingCode.html"}},[_v("Tracing code")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/tutorials/AddRemark.html"}},[_v("Adding a command")])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-1",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/tutorials/RemovingFields.html"}},[_v("Removing Fields")])])])])]),_v(" "),_c('li',[_c('div',{staticClass:"site-nav-default-list-item site-nav-list-item-0",attrs:{"onclick":"handleSiteNavClick(this)"}},[_c('a',{attrs:{"href":"/tp/AboutUs.html"}},[_v("About Us")])])])])],1)],1)]),_v(" "),_c('div',{attrs:{"id":"content-wrapper"}},[_m(0),_v(" "),_m(1),_v(" "),_c('p',[_v("As the job climate is worsening, more and more students are not being able to find a job, and increasingly affiliated with mental health issues. This results in an increased workload from a larger number of patients to manage and appointments to schedule. CogniCare is a patient management system, designed to take care of SoC students who suffer from various mental health issues and concerns due to being unable to find internships or jobs.")]),_v(" "),_c('p',[_v("CogniCare takes care of the load of many tedious tasks such as identifying today's appointments and measuring a patient's satisfaction progress levels over a period of time, until they are finally ready for discharge.")]),_v(" "),_c('div',{pre:true,attrs:{"class":"page-nav-print d-none d-print-block"}}),_v(" "),_c('hr'),_v(" "),_m(2),_v(" "),_m(3),_v(" "),_c('hr'),_v(" "),_m(4),_v(" "),_m(5),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ArchitectureDiagram.png"}}),_v(" "),_m(6),_v(" "),_c('p',[_v("Given below is a quick overview of the main components and how they interact with each other.")]),_v(" "),_m(7),_v(" "),_m(8),_v(" "),_m(9),_v(" "),_c('p',[_v("The bulk of the app's work is done by the following four components:")]),_v(" "),_m(10),_v(" "),_m(11),_v(" "),_m(12),_v(" "),_m(13),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ArchitectureSequenceDiagram.png"}}),_v(" "),_c('p',[_v("Each of the four main components (also shown in the diagram above),")]),_v(" "),_m(14),_v(" "),_m(15),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ComponentManagers.png"}}),_v(" "),_c('p',[_v("The sections below give more details of each component.")]),_v(" "),_m(16),_v(" "),_m(17),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/UiClassDiagram.png","alt":"Structure of the UI Component"}}),_v(" "),_m(18),_v(" "),_m(19),_v(" "),_m(20),_v(" "),_m(21),_v(" "),_m(22),_v(" "),_m(23),_v(" "),_m(24),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/LogicClassDiagram.png"}}),_v(" "),_m(25),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/DeletePatientSequenceDiagram.png","alt":"Interactions Inside the Logic Component for the `deletep 1` Command"}}),_v(" "),_c('box',{attrs:{"type":"info","seamless":""}},[_c('p',[_c('strong',[_v("Note:")]),_v(" The lifeline for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommandParser")]),_v(" should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.")])]),_v(" "),_m(26),_v(" "),_m(27),_v(" "),_m(28),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ParserClasses.png"}}),_v(" "),_c('p',[_v("How the parsing works:")]),_v(" "),_m(29),_v(" "),_m(30),_v(" "),_m(31),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/ModelClassDiagram.png"}}),_v(" "),_m(32),_v(" "),_m(33),_v(" "),_m(34),_v(" "),_m(35),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/StorageClassDiagram.png"}}),_v(" "),_m(36),_v(" "),_m(37),_v(" "),_m(38),_v(" "),_m(39),_v(" "),_c('hr'),_v(" "),_m(40),_v(" "),_c('p',[_v("This section describes some noteworthy details on how certain features are implemented.")]),_v(" "),_m(41),_v(" "),_m(42),_v(" "),_m(43),_v(" "),_m(44),_v(" "),_m(45),_v(" "),_c('p',[_v("Appointment ID is a unique identifier for each appointment. It is generated by the system when a new appointment is created.")]),_v(" "),_c('p',[_v("The Appointment Date Time is the date and time of the appointment.")]),_v(" "),_c('p',[_v("The Patient ID is the unique identifier of the patient that the appointment is related to.")]),_v(" "),_c('p',[_v("The Attended Status is a boolean value that indicates whether the patient has attended the appointment.")]),_v(" "),_c('p',[_v("The Feedback Score is an integer value from 1 to 5 (inclusive) that indicates patient satisfaction.")]),_v(" "),_c('p',[_v("The Appointment Description is a String that describes the appointment.")]),_v(" "),_m(46),_v(" "),_m(47),_v(" "),_m(48),_v(" "),_m(49),_v(" "),_m(50),_v(" "),_m(51),_v(" "),_m(52),_v(" "),_m(53),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/FindPatientSequenceDiagram.png"}}),_v(" "),_c('p',[_v("In enhancing the search functionality within CogniCare, the implementation of an AND constraint for search queries was paramount. This feature allows counsellors to refine search criteria, leading to more precise and relevant search results. For example, a counsellor can search for a patient using a combination of parameters (partial name AND partial phone number AND partial email address). It is to note that only parameter is required; the others are optional.")]),_v(" "),_c('p',[_v("This enhancement was driven by the need of:")]),_v(" "),_m(54),_v(" "),_m(55),_v(" "),_m(56),_v(" "),_m(57),_v(" "),_m(58),_v(" "),_m(59),_v(" "),_m(60),_v(" "),_m(61),_v(" "),_m(62),_v(" "),_m(63),_v(" "),_m(64),_v(" "),_c('p',[_v("This class ensures that")]),_v(" "),_m(65),_v(" "),_m(66),_v(" "),_m(67),_v(" "),_c('p',[_v("We have considered these alternatives:")]),_v(" "),_m(68),_v(" "),_m(69),_v(" "),_m(70),_v(" "),_m(71),_v(" "),_m(72),_v(" "),_m(73),_v(" "),_c('p',[_v("We have considered these alternatives:")]),_v(" "),_m(74),_v(" "),_m(75),_v(" "),_m(76),_v(" "),_m(77),_v(" "),_m(78),_v(" "),_m(79),_v(" "),_c('p',[_v("We have considered these alternatives:")]),_v(" "),_m(80),_v(" "),_m(81),_v(" "),_m(82),_v(" "),_m(83),_v(" "),_m(84),_v(" "),_c('p',[_v("Otherwise, each of the search terms will be applied to each of the respective fields of the CogniCare application in a case-insensitive format.")]),_v(" "),_c('p',[_v("We have considered these alternatives:")]),_v(" "),_m(85),_v(" "),_m(86),_v(" "),_c('p',[_v("The add appointment feature allows users to create a new appointment and insert them into the application.")]),_v(" "),_c('p',[_v("Below is the add appointment activity diagram.")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/AddAppointmentActivityDiagram.png","alt":"Add Appointment Activity Diagram"}}),_v(" "),_m(87),_v(" "),_m(88),_v(" "),_c('p',[_v("There are a few classes and methods used to interact with the add appointment command.")]),_v(" "),_m(89),_v(" "),_m(90),_v(" "),_m(91),_v(" "),_m(92),_v(" "),_m(93),_v(" "),_m(94),_v(" "),_c('p',[_v("The query appointment feature allows users to query appointments by specific fields through the use of patient ID or name or appointment ID. Querying by datetime is done via the filter appointment feature.")]),_v(" "),_c('p',[_v("Below is the sequence diagram for querying appointments")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/QueryAppointmentSequenceDiagram.png","alt":"Query Appointment Sequence Diagram"}}),_v(" "),_c('p',[_v("And below is the activity diagram when a query appointment command is made")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/QueryAppointmentActivityDiagram.png","alt":"Query Appointment Activity Diagram"}}),_v(" "),_m(95),_v(" "),_m(96),_v(" "),_m(97),_v(" "),_m(98),_v(" "),_m(99),_v(" "),_m(100),_v(" "),_m(101),_v(" "),_c('p',[_v("The edit appointment feature allows users to update appointment fields in case of any changes to the appointment details.")]),_v(" "),_c('p',[_v("Below is the sequence diagram for editing an appointment.")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/EditAppointmentSequenceDiagram.png","alt":"Edit Appointment Sequence Diagram","width":"550"}}),_v(" "),_m(102),_v(" "),_m(103),_v(" "),_m(104),_v(" "),_m(105),_v(" "),_m(106),_v(" "),_c('p',[_v("The delete appointment feature allows users to remove appointments from CogniCare.")]),_v(" "),_c('p',[_v("Below is the activity diagram for deleting an appointment.")]),_v(" "),_c('pic',{attrs:{"src":"/tp/diagrams/DeleteAppointmentActivityDiagram.png","alt":"Delete Appointment Activity Diagram"}}),_v(" "),_m(107),_v(" "),_m(108),_v(" "),_m(109),_v(" "),_m(110),_v(" "),_m(111),_v(" "),_m(112),_v(" "),_m(113),_v(" "),_c('p',[_v("The filter appointment feature allows users to filter appointments based on the date and time of the appointment.")]),_v(" "),_c('pic',{attrs:{"scr":"diagrams/FilterAppointmentSequenceDiagram.puml","alt":"Filter Appointment Sequence Diagram","src":"/tp/ea38dc5c81defc17d0787c07142f0e45.png"}})],1),_v(" "),_c('overlay-source',{attrs:{"id":"page-nav","tag-name":"nav","to":"page-nav"}},[_c('div',{staticClass:"nav-component slim-scroll"},[_c('overlay-source',{staticClass:"nav nav-pills flex-column my-0 small no-flex-wrap",attrs:{"id":"mb-page-nav","tag-name":"nav","to":"mb-page-nav"}},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#cognicare-developer-guide"}},[_v("CogniCare Developer Guide‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#about-cognicare"}},[_v("About CogniCare‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#setting-up-getting-started"}},[_v("Setting up, getting started‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#design"}},[_v("Design‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#architecture"}},[_v("Architecture‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#ui-component"}},[_v("UI component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#logic-component"}},[_v("Logic component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#model-component"}},[_v("Model component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#storage-component"}},[_v("Storage component‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#common-classes"}},[_v("Common classes‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#implementation"}},[_v("Implementation‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#appointment"}},[_v("Appointment‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#finding-contact-by-different-parameters"}},[_v("Finding Contact by different parameters.‎")])]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#create-a-new-patient"}},[_v("Create a new Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#editing-a-current-patient"}},[_v("Editing a current Patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#deleting-an-existing-patient"}},[_v("Deleting an existing patient‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#querying-for-patients"}},[_v("Querying for Patients‎")]),_v(" "),_c('nav',{staticClass:"nav nav-pills flex-column my-0 nested no-flex-wrap"},[_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#add-appointment-feature"}},[_v("Add Appointment Feature‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#query-appointment-feature"}},[_v("Query Appointment Feature‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#edit-appointment-feature"}},[_v("Edit Appointment Feature‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#delete-appointment-feature"}},[_v("Delete Appointment Feature‎")]),_v(" "),_c('a',{pre:true,attrs:{"class":"nav-link py-1","href":"#filter-appointment-feature"}},[_v("Filter Appointment Feature‎")])])])])],1)]),_v(" "),_c('scroll-top-button')],1),_v(" "),_m(114)])}
};
    var pageVueStaticRenderFns = [function anonymous(
) {
with(this){return _c('h1',{attrs:{"id":"cognicare-developer-guide"}},[_v("CogniCare Developer Guide"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#cognicare-developer-guide","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"about-cognicare"}},[_v("About CogniCare"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#about-cognicare","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"setting-up-getting-started"}},[_c('strong',[_v("Setting up, getting started")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#setting-up-getting-started","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Refer to the guide "),_c('a',{attrs:{"href":"/tp/SettingUp.html"}},[_c('em',[_v("Setting up and getting started")])]),_v(".")])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"design"}},[_c('strong',[_v("Design")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#design","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"architecture"}},[_v("Architecture"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#architecture","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('em',[_c('strong',[_v("Architecture Diagram")])]),_v(" given above explains the high-level design of the App.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Main components of the architecture")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Main")])]),_v(" (consisting of classes "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/Main.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Main")])]),_v(" and "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/MainApp.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainApp")])]),_v(") is in charge of the app launch and shut down.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("At app launch, it initializes the other components in the correct sequence, and connects them up with each other.")]),_v(" "),_c('li',[_v("At shut down, it shuts down the other components and invokes cleanup methods where necessary.")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('a',{attrs:{"href":"#ui-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")])])]),_v(": The UI of the App.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#logic-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")])])]),_v(": The command executor.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#model-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")])])]),_v(": Holds the data of the App in memory.")]),_v(" "),_c('li',[_c('a',{attrs:{"href":"#storage-component"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")])])]),_v(": Reads data from, and writes data to, the hard disk.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('a',{attrs:{"href":"#common-classes"}},[_c('strong',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Commons")])])]),_v(" represents a collection of classes used by multiple other components.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("How the architecture components interact with each other")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('em',[_v("Sequence Diagram")]),_v(" below shows how the components interact with each other for the scenario where the user issues the command "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletep 1")]),_v(".")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("defines its "),_c('em',[_v("API")]),_v(" in an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("interface")]),_v(" with the same name as the Component.")]),_v(" "),_c('li',[_v("implements its functionality using a concrete "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("{Component Name}Manager")]),_v(" class (which follows the corresponding API "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("interface")]),_v(" mentioned in the previous point.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("For example, the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component defines its API in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic.java")]),_v(" interface and implements its functionality using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("LogicManager.java")]),_v(" class which follows the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent an outside component from being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.")])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"ui-component"}},[_v("UI component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#ui-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('strong',[_v("API")]),_v(" of this component is specified in "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/ui/Ui.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Ui.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The UI consists of a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")]),_v(" that is made up of parts e.g."),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandBox")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ResultDisplay")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ListPanel")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("StatusBarFooter")]),_v(" etc. All these, including the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")]),_v(", inherit from the abstract "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UiPart")]),_v(" class which captures the commonalities between classes that represent parts of the visible GUI.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" component uses the JavaFx UI framework. The layout of these UI parts is defined in matching "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v(".fxml")]),_v(" files that are in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("src/main/resources/view")]),_v(" folder. For example, the layout of the "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow")])]),_v(" is specified in "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/resources/view/MainWindow.fxml"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("MainWindow.fxml")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("executes user commands using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component.")]),_v(" "),_c('li',[_v("listens for changes to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" data so that the UI can be updated with the modified data.")]),_v(" "),_c('li',[_v("keeps a reference to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component, because the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UI")]),_v(" relies on the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" to execute commands.")]),_v(" "),_c('li',[_v("depends on some classes in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component, as it displays "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" object residing in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(".")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"logic-component"}},[_v("Logic component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#logic-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/logic/Logic.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Here's a (partial) class diagram of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component:")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The sequence diagram below illustrates the interactions within the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component, taking "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("execute(\"deletep 1\")")]),_v(" API call as an example.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("How the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" component works:")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("When "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" is called upon to execute a command, the command is passed to a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandParser")]),_v(" object which in turn creates a parser that matches the command (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeletePatientCommandParser")]),_v(") and uses it to parse the command.")]),_v(" "),_c('li',[_v("This results in a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Command")]),_v(" object (more precisely, an object of one of its subclasses e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeletePatientCommand")]),_v(") which is executed by the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("LogicManager")]),_v(".")]),_v(" "),_c('li',[_v("The command can communicate with the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" when it is executed (e.g., to delete a patient)."),_c('br')]),_v(" "),_c('li',[_v("The result of the command execution is encapsulated as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandResult")]),_v(" object which is returned back from "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(".")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Here are the other classes in "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Logic")]),_v(" (omitted from the class diagram above) that are used for parsing a user command:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("When called upon to parse a user command, the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandParser")]),_v(" class creates an "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommandParser")]),_v(" ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZ")]),_v(" is a placeholder for the specific command name e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddPatientCommandParser")]),_v(") which uses the other classes shown above to parse the user command and create a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommand")]),_v(" object (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddPatientCommand")]),_v(") which the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandParser")]),_v(" returns back as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Command")]),_v(" object.")]),_v(" "),_c('li',[_v("All "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("XYZCommandParser")]),_v(" classes (e.g., "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddCommandParser")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteCommandParser")]),_v(", ...) inherit from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Parser")]),_v(" interface so that they can be treated similarly where possible e.g., during testing.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"model-component"}},[_v("Model component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#model-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/model/Model.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("stores the address book data i.e., all "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" objects (which are contained in a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UniquePersonList")]),_v(" object).")]),_v(" "),_c('li',[_v("stores the currently 'selected' "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" objects (e.g., results of a search query) as a separate "),_c('em',[_v("filtered")]),_v(" list which is exposed to outsiders as an unmodifiable "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ObservableList<Patient>")]),_v(" that can be 'observed' e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.")]),_v(" "),_c('li',[_v("stores a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UserPref")]),_v(" object that represents the user’s preferences. This is exposed to the outside as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ReadOnlyUserPref")]),_v(" objects.")]),_v(" "),_c('li',[_v("does not depend on any of the other three components (as the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" represents data entities of the domain, they should make sense on their own without depending on other components)")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"storage-component"}},[_v("Storage component"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#storage-component","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("API")]),_v(" : "),_c('a',{attrs:{"href":"https://github.com/AY2324S2-CS2103-F08-2/tp/tree/master/src/main/java/seedu/address/storage/Storage.java"}},[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage.java")])])])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")]),_v(" component,")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("can save both address book data and user preference data in JSON format, and read them back into corresponding objects.")]),_v(" "),_c('li',[_v("inherits from both "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AppointmentListStorage")]),_v(" and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UserPrefStorage")]),_v(", which means it can be treated as either one (if only the functionality of only one is needed).")]),_v(" "),_c('li',[_v("depends on some classes in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component (because the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Storage")]),_v(" component's job is to save/retrieve objects that belong to the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(")")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"common-classes"}},[_v("Common classes"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#common-classes","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Classes used by multiple components are in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("seedu.addressbook.commons")]),_v(" package.")])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"implementation"}},[_c('strong',[_v("Implementation")]),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#implementation","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"appointment"}},[_v("Appointment"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appointment","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"implementation-2"}},[_v("Implementation"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#implementation-2","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('h5',{attrs:{"id":"appointment-classes"}},[_v("Appointment Classes"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appointment-classes","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Appointment is a new feature added to the app. It is a new entity that is related to a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(". An "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Appointment")]),_v(" object has the following attributes:")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("Appointment ID")]),_v(" "),_c('li',[_v("Appointment Start and End Date Time")]),_v(" "),_c('li',[_v("Patient ID")]),_v(" "),_c('li',[_v("Attended Status")]),_v(" "),_c('li',[_v("Feedback Score")]),_v(" "),_c('li',[_v("Appointment Description")])])}
},function anonymous(
) {
with(this){return _c('h5',{attrs:{"id":"appointment-storage"}},[_v("Appointment Storage"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#appointment-storage","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_v("Appointments are stored in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AppointmentList")]),_v(" which contains "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UniqueAppointmentList")]),_v(" object that is parallel similar to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("PatientList")]),_v(" storing "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("UniquePatientList")]),_v(".\nThe "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(" component provides methods to add, delete, and retrieve appointments from "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AppointmentList")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("Appointment List are saved under a separate file "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("appointmentList.json")]),_v(" in the data folder, apart from the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("patientList.json")]),_v(" file that stores the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("patientList")]),_v(" data.")])}
},function anonymous(
) {
with(this){return _c('h4',{attrs:{"id":"design-considerations"}},[_v("Design Considerations"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#design-considerations","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: Patient ID")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_v("In any system that manages individual records, it is critical to ensure that we are able to distinguish between entities (which are patients) in our case.")])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 1: Using Integer ID as the primary key (Current Approach)")])]),_v(" "),_c('ul',[_c('li',[_c('p',[_v("We needed some method to ensure that the patient was unique. The primary solution implemented involves a running integer identifier—and is saved together with each patient. The identifier serves as the primary key for the patient object, similar to how a unique ID in a database ensures each record's uniqueness.")])]),_v(" "),_c('li',[_c('p',[_v("This was different to how the AB3 application was originally designed—where the ID followed the natural ordering of the elements in the list.")])]),_v(" "),_c('li',[_c('p',[_v("Pros")]),_v(" "),_c('ul',[_c('li',[_v("Extremely user-friendly for counsellor as ID is never changed.\n"),_c('ul',[_c('li',[_v("A member card displaying the patient ID could potentially be issued to patients.")])])])])]),_v(" "),_c('li',[_c('p',[_v("Cons")]),_v(" "),_c('ul',[_c('li',[_v("Difficult to implement.")]),_v(" "),_c('li',[_v("There will be \"holes\" in the sequential ID when records are deleted.")])])])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 2: Using Name as the primary key")])]),_v(" "),_c('ul',[_c('li',[_v("This approach was quickly deemed unsuitable due to the high probability of name duplication. While names are an important identifier, there is a great risk of collision (i.e. \"Jack Tan\" versus \"Jack Tan Ah Kou\"). While this method is sufficient for a non-mission critical address book, our CogniCare application aims to reduce error occurrence.")]),_v(" "),_c('li',[_v("Pros\n"),_c('ul',[_c('li',[_v("Extremely intuitive for a counselor to type in the patient's name")])])]),_v(" "),_c('li',[_v("Cons\n"),_c('ul',[_c('li',[_v("Commands will be extremely long; and challenging to type.")]),_v(" "),_c('li',[_v("Counselor will need to remember exactly how the full name is spelt.")]),_v(" "),_c('li',[_v("May select the wrong patient (i.e., \"Jack Tan\" versus \"Jack Tan Ah Kou\").")])])])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 3: Using Natural Ordering of the names in CogniCare application (AB3 approach)")])]),_v(" "),_c('ul',[_c('li',[_v("As we initially strove for a design where the patient identifier to be used like a Foreign Key in the Appointments object, the inconsistent ID would mean that the data integrity for Appointments class would be compromised.")]),_v(" "),_c('li',[_v("Pros\n"),_c('ul',[_c('li',[_v("Easy to implement (AB3 has already implemented it.)")])])]),_v(" "),_c('li',[_v("Cons\n"),_c('ul',[_c('li',[_v("Data Integrity of Appointments will be compromised")]),_v(" "),_c('li',[_v("Every time a patient is deleted, the subsequent IDs will be coalesced.")])])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: Search query with AND constraint")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"finding-contact-by-different-parameters"}},[_v("Finding Contact by different parameters."),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#finding-contact-by-different-parameters","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Improved Search Accuracy: By allowing multiple criteria to be specified, counsellors can narrow down search results to the most relevant patients (as the SoC cohort is large).")]),_v(" "),_c('li',[_v("Efficiency: Enables quicker access to patient records by reducing the time spent sifting through irrelevant patient information.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Single Criterion Search (AB3 Approach)")]),_v(": The original AB3 approach of allowing search based on a single criterion was found to be too limiting for the different needs of patient management in CogniCare.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Search Query with OR Constraint:")]),_v(" While also considered, this approach was determined to potentially yield too broad of a search result, undermining the efficiency desired in retrieving patient record.")])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: Appointment ID")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_c('strong',[_v("Alternative 1 (current choice):")]),_v(" Generate auto-increasing fixed appointment ID when creating a new appointment. Fail commands that attempt to set the appointment ID still increase the appointment ID.")]),_v(" "),_c('ul',[_c('li',[_v("Pros:\n"),_c('ul',[_c('li',[_v("Easier to implement.")]),_v(" "),_c('li',[_v("This is the implementation that take inspires from DBMS auto-increment.")]),_v(" "),_c('li',[_v("Consistency in appointment ID.")]),_v(" "),_c('li',[_v("Easier to store as a separate file for appointment storage.")])])]),_v(" "),_c('li',[_v("Cons: Confusion for users who expect appointment ID to increase one by one.")]),_v(" "),_c('li',[_v("Mitigation: Ensure that the appointment ID is unique.")])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 2 (AB3 choice):")]),_v(" No fixed appointment ID. AppointmentID is relative to the Appointment view.")]),_v(" "),_c('ul',[_c('li',[_v("Pros: More flexible for users.")]),_v(" "),_c('li',[_v("Cons: More complex to implement. It may lead to inconsistencies between appointments.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: Where to store appointments locally")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_c('strong',[_v("Alternative 1 (current choice):")]),_v(" Store appointments in a separate file.")]),_v(" "),_c('ul',[_c('li',[_v("Pros: Easier to manage appointments separately from patients.")]),_v(" "),_c('li',[_v("Cons:\n"),_c('ul',[_c('li',[_v("More complex to manage two separate files.")]),_v(" "),_c('li',[_v("Time complexity to carry out command with appointments as it has to read the whole list of appointments.")])])]),_v(" "),_c('li',[_v("Risks:\n"),_c('ul',[_c('li',[_v("May lead to inconsistencies between the two files in regard to ids.")])])]),_v(" "),_c('li',[_v("Mitigation: Ensure that both files are updated together.")])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 2:")]),_v(" Store appointments as a field in the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" class. Hence, all appointment data will be stored in the same file as the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("patientList")]),_v(".")]),_v(" "),_c('ul',[_c('li',[_v("Pros: Easier to manage a single file.")]),_v(" "),_c('li',[_v("Cons:\n"),_c('ul',[_c('li',[_v("May lead to a more complex data structure.")]),_v(" "),_c('li',[_v("Delete a patient will cascade delete all appointments.")])])]),_v(" "),_c('li',[_v("Risks: May lead to performance issues when reading/writing data.")]),_v(" "),_c('li',[_v("Mitigation: Optimize the data structure for reading/writing data.")])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Aspect: How to store appointments")])])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_c('p',[_c('strong',[_v("Alternative 1 (current choice):")]),_v(" Store appointments as a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AppointmentList")]),_v(" in "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Model")]),_v(".")]),_v(" "),_c('ul',[_c('li',[_v("Pros:\n"),_c('ul',[_c('li',[_v("Easier to design since it is similar to "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("patientList")]),_v(" implementation.")]),_v(" "),_c('li',[_v("If we want to add more Objects for Model, this will be the default implementation")])])]),_v(" "),_c('li',[_v("Cons:\n"),_c('ul',[_c('li',[_v("Adding an extra layer of OOP abstraction.")]),_v(" "),_c('li',[_v("May lead to performance issues when reading/writing data (more prone to crashing issues).")])])])])]),_v(" "),_c('li',[_c('p',[_c('strong',[_v("Alternative 2:")]),_v(" Store appointments as a list of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Appointment")]),_v(" objects in "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("patientList")]),_v(".")]),_v(" "),_c('ul',[_c('li',[_v("Pros: Easier to manage appointments as a list.")]),_v(" "),_c('li',[_v("Cons:\n"),_c('ul',[_c('li',[_v("Reduce in OOP-ness of the code")]),_v(" "),_c('li',[_v("Hard to scale up, as need to change the whole code base.")])])])])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"create-a-new-patient"}},[_v("Create a new Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#create-a-new-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddPatientCommandParser")]),_v(" obtains the values that correspond to the prefixes such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("p/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("n/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("e/")]),_v(", and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("a/")]),_v(" which represent phone, name, email address, and alias accordingly.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("The data stored must contain the name, phone, and email address corresponding to their respective format.")]),_v(" "),_c('li',[_v("Values that are corresponding to each tag are valid.")]),_v(" "),_c('li',[_v("There can be multiple aliases ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("a/")]),_v("), but "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("p/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("n/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("e/")]),_v(" may only appear once.")]),_v(" "),_c('li',[_v("A unique Id is created for each patient. This ID is strictly increasing and remains tagged to the patient (and does not change its order even if other records prior get deleted).")]),_v(" "),_c('li',[_v("Names are also used as a primary key (meaning no 2 users of the same name may be added to the CogniCare application) regardless of case sensitivity and whitespace, i.e. \"JEROME CHUA\" and \"jErOmE    CHuA\" are treated the same.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("If the constraints are violated, "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddPatientCommandParser")]),_v(" will throw a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ParseException")]),_v(" and log the invalid parameter passed into the function.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Otherwise, if the process is successful, a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" object will be created to add the patient to the CongiCare application.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("Using the natural order of the list as the index of the Person. This is sub-optimal as holes in the records may lead to unexpected behaviour when handling the appointments. For example, consider a list with 3 patients. If the second patient is deleted, then the 3rd patient becomes the 2nd patient. This will be confusing for the user. Therefore, we sought to seek a solution to ensure that the studentId always remains unique.")]),_v(" "),_c('li',[_v("Completely re-writing AB3's addressbook. This is not practical as our functionalities and use-case is similar to the use case of the AB3 application.")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"editing-a-current-patient"}},[_v("Editing a current Patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#editing-a-current-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditPatientCommandParser")]),_v(" obtains the patient index and the values that correspond to the prefixes such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("p/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("n/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("e/")]),_v(", and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("a/")]),_v(" which represent phone, name, email address, and alias accordingly.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("There can be multiple affliated-with ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("a/")]),_v("), but "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("p/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("n/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("e/")]),_v(" may only appear once.")]),_v(" "),_c('li',[_v("The patient index is based on the unique ID that is tagged to each patient, and is not the natural ordering of the list.")]),_v(" "),_c('li',[_v("The edited fields are required to have the same validation as creating a new patient.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("If the constraints are violated, "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditPatientCommandParser")]),_v(" will throw a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ParseException")]),_v(" due to invalid patient ID or invalid parameter being parsed.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Otherwise, if the process is successful, the current "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" object corresponding to the respective ID will be updated with the editedInformation.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("Using the name as the primary key instead of the patient ID - may lead to unexpected deletes as there could be a case where the counselor has two patients of the similar name \"Tan Ah Kow\" and \"Tan Ah\". Suppose the counselor wants to delete \"Tan Ah\", and not \"Tan Ah Kou\" - in this case, the wrong record will be deleted by accident. Using an integer value as the identifier would eliminate this problem and will also makes it much easier for the user to input the commands.\n"),_c('ul',[_c('li',[_v("Therefore the workflow would be to search for the respective patient for the respective index via the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("queryp")]),_v(" command before editing it.")])])])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"deleting-an-existing-patient"}},[_v("Deleting an existing patient"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#deleting-an-existing-patient","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeletePatientCommandParser")]),_v(" obtains the patient index that is to be deleted.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("The patient index is based on the unique ID that is tagged to each individual patient and is not the natural ordering of the list.")])])}
},function anonymous(
) {
with(this){return _c('p',[_v("If the constraints are violated, "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeletePatientCommandParser")]),_v(" will throw a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ParseException")]),_v(" due to an invalid patient ID passed.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("Otherwise, if the process is successful, the current "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" object corresponding to the respective ID will be updated with the deleted patient information containing the phone, email, and respective alias information.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("A confirmation dialog when deleting the patients. We decided to not go with this approach as this drastically reduces the speed which the user makes use of the application.")]),_v(" "),_c('li',[_v("Deleting the student using the natural order of the list may also result in unintended deletions.")])])}
},function anonymous(
) {
with(this){return _c('h2',{attrs:{"id":"querying-for-patients"}},[_v("Querying for Patients"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#querying-for-patients","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ListPatientCommandParser")]),_v(" obtains the values that correspond to the criteria such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("p/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("n/")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("e/")]),_v(", and "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("a/")]),_v(" which represent phone, name, email address, and alias(es) accordingly, and combined with an AND logic.")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The command for this operation is "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("queryp")]),_v(" with at least one or zero parameters. If no parameters (or at least one invalid parameter is passed into the command), the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("queryp")]),_v(" command returns all the information of the patients (that is applied without any filters/predicates).")])}
},function anonymous(
) {
with(this){return _c('p',[_v("The "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ListPatientCommandParser")]),_v(" first checks for the presence of empty arguments / no prefix being specified. If this criterion is true, then all the patient is returned as normal. As such this class does not throw any exceptions, but just returns all the data in the CogniCare application.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("User-Forgiveness "),_c('em',[_v("versus")]),_v(" Strict Error Handling: Returning an error message where the command is correct, but illegal parameters are being supplied, then an error message is displayed. We decided against this approach because this will reduce the \"user friendliness\" of the application as the user would then have the consult the manual / read the error message to resolve the error.")]),_v(" "),_c('li',[_v("Creating a \"do-it-all\" predicate for the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Patient")]),_v(" class will be less repetitive code as compared to the current approach ("),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EmailContainsKeywordPredicate.java")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("NameContainsKeywordPredicate.java")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("PhoneContainsKeywordPredicate.java")]),_v(", "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("TagContainsKeywordPredicate.java")]),_v(") which requires more (repetitive code) as compared to making a class such as "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("StudentContainsKeywordPredicate.java")]),_v(" which would be easier to code - but harder to test and extend in future. Not to mention, this will also increase the difficulty in writing unit tests.")]),_v(" "),_c('li',[_v("Using "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AND")]),_v(" logic for combining predicates, instead of "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("OR")]),_v(" predicate - the reason was that since the values already supported partial word matching (i.e. Searching for "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("coco")]),_v(" in the String "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Coconut")]),_v(" will result in the row being returned). As such, using the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("OR")]),_v(" logic will lead to too many rows being returned and therefore confusing to the user.")]),_v(" "),_c('li',[_v("Using case-insensitive search: the use of case-insensitive search terms for parameters matching provides a more seamless and more user-friendly experience.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"add-appointment-feature"}},[_v("Add Appointment Feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#add-appointment-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Implementation")]),_v("\nAn observable list is used to store the list of appointments.")])}
},function anonymous(
) {
with(this){return _c('ul',[_c('li',[_v("The list is initialised as an empty list of type appointments in the beginning.")]),_v(" "),_c('li',[_v("A unique identifier is created for each appointment. This identifier is strictly increasing and remains tagged to the appointment (and does not change its order even if other records prior get deleted).")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddAppointmentCommand")]),_v(" "),_c('ol',[_c('li',[_v("Define add appointment command key word and other error messages.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddAppointmentCommand#execute()")]),_v(" "),_c('ol',[_c('li',[_v("Validates the results of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddAppointmentCommandParser#parse()")])]),_v(" "),_c('li',[_v("Adds a valid appointment to CogniCare.")]),_v(" "),_c('li',[_v("Throws a Command Exception if the appointment returned is invalid. The new appointment is considered valid if there is no\nappointment with the same patient id, date and time, and the date and time does not overlap with another appointment in CogniCare.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddAppointmentCommandParser#parse()")]),_v(" "),_c('ol',[_c('li',[_v("Parses the add appointment commands, ensuring that all required parameters are present.")]),_v(" "),_c('li',[_v("Returns a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("AddAppointmentCommand.")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Rationale for implementation")]),_v("\nThere are a few key features that this module aims to implement")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Allow users to add new appointments to keep track of all past and upcoming appointments.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Alternatives considered")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Using an array list instead of an observable list. However, the GUI was not able to accurately reflect the new appointment list when new appointments were added.")]),_v(" "),_c('li',[_v("Using the natural order of the list as the index of the "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("Appointment")]),_v(". To standardise the implementation throughout the application, we decided to adopt the patient list implementation.\nTherefore, each appointment has a unique identifier that does not change even when the natural order of the list is changed.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"query-appointment-feature"}},[_v("Query Appointment Feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#query-appointment-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Implementation")]),_v("\nThere are a few classes and methods that make this feature work")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ListAppointmentCommand")]),_v(" - Command that is executed")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ListAppointmentCommandParser")]),_v(" - Parses the command and performs the required validation checks")]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("RelationshipUtil")]),_v(" - In order to check that the specified patient ID is valid, we use a Util class which checks if a patient ID exists in a list of all patients")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Rationale for implementation")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("This list command adds a unique validation step that checks for a valid patient ID. The rationale behind this is because of the confusion that would come about by listing out an empty list of appointments are querying with an invalid patient ID. For example, if there was no validation, and you run "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("querya pid/999")]),_v(" and you see no appointments, you might assume that there is no appointment with the patient ID of 999, rather than there is no such patient ID in the first place\n"),_c('ol',[_c('li',[_v("Note that patient name is not subject to the same validation because while the existence of a patient ID can be easily verified, the existence of a substring of a name cannot. Furthermore, if you run "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("querya n/Tom")]),_v(" and no appointments are listed, the conclusion that there is no appointment with the patient named \"Tom\".")])])]),_v(" "),_c('li',[_v("The query command allows for ease and flexibility in querying, while also providing sufficient validation to bolster and not hinder the querying process. This feature helps to streamline the user experience for users who are fast typists and technically-competent.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Alternatives considered")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Initially, the command was only allowed to query just by patient ID and appointment ID. However, this was found to be too restricting on the user as it is unintuitive for the user to remember IDs over names.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"edit-appointment-feature"}},[_v("Edit Appointment Feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#edit-appointment-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Implementation")]),_v("\nThere are a few classes and methods used to interact with the add appointment command.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditAppointmentCommand")]),_v(" "),_c('ol',[_c('li',[_v("Defines edit appointment command key word and other error messages.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditAppointmentCommand#execute()")]),_v(" "),_c('ol',[_c('li',[_v("Finds the specified appointment to edit. Throws a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandException")]),_v(" if appointment is not found.")]),_v(" "),_c('li',[_v("Validates the edited appointment, ensuring that the edited appointment does not exist in CogniCare. Date and time checks are performed as well.")]),_v(" "),_c('li',[_v("If there is no error, the specified appointment is updated and a success message is displayed.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditAppointmentCommandParser#parse()")]),_v(" "),_c('ol',[_c('li',[_v("Parses the edit appointment command, ensuring that all parameters provided are valid. A "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ParseException")]),_v(" is thrown if there are no parameters specified.")]),_v(" "),_c('li',[_v("Creates an edited appointment.")]),_v(" "),_c('li',[_v("Returns a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("EditAppointmentCommand.")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Rational for implementation")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Users need to be able to update individual appointments in the event that appointment details change.")]),_v(" "),_c('li',[_v("There are also optional parameters present in the add appointment command that users should be able to update.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"delete-appointment-feature"}},[_v("Delete Appointment Feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#delete-appointment-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Implementation")]),_v("\nThere are a few classes and methods used to interact with the add appointment command.")])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteAppointmentCommand")]),_v(" "),_c('ol',[_c('li',[_v("Defines delete appointment command key word and other error messages.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteAppointmentCommand#execute()")]),_v(" "),_c('ol',[_c('li',[_v("Find the specified appointment to delete. Throws a "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("CommandException")]),_v(" if appointment is not found.")]),_v(" "),_c('li',[_v("If there is no error, the specified appointment is deleted from CogniCare and a success message is displayed.")])])]),_v(" "),_c('li',[_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteAppointmentCommandParser#parse()")]),_v(" "),_c('ol',[_c('li',[_v("Parses the delete appointment command, ensuring that the provided appointment index is valid.\nA "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("ParseException")]),_v(" is thrown if there are no parameters specified or the appointment index provided is not positive.")]),_v(" "),_c('li',[_v("Returns a new "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("DeleteAppointmentCommand")])])])])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Rational for implementation")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Users need to be able to delete individual appointments in the event that appointment an appointment is cancelled.")])])}
},function anonymous(
) {
with(this){return _c('p',[_c('strong',[_v("Alternative considered")])])}
},function anonymous(
) {
with(this){return _c('ol',[_c('li',[_v("Command format "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("deletea aid/APPOINTMENT_INDEX")]),_v(". The appointment index prefix "),_c('code',{pre:true,attrs:{"class":"hljs inline no-lang"}},[_v("aid/")]),_v(" was deemed not necessary as it is very clear that this delete command only applies to appointments.")])])}
},function anonymous(
) {
with(this){return _c('h3',{attrs:{"id":"filter-appointment-feature"}},[_v("Filter Appointment Feature"),_c('a',{staticClass:"fa fa-anchor",attrs:{"href":"#filter-appointment-feature","onclick":"event.stopPropagation()"}})])}
},function anonymous(
) {
with(this){return _c('footer',[_c('div',{staticClass:"text-center"},[_c('small',[_v("["),_c('span',[_c('strong',[_v("Powered by")])]),_v(" "),_c('img',{attrs:{"src":"https://markbind.org/favicon.ico","width":"30"}}),_v(" "),_c('a',{attrs:{"href":"https://markbind.org/"}},[_v("MarkBind 5.4.0")]),_v(", generated on Sun, 14 Apr 2024, 19:50:30 GMT+8]")])])])}
}];
  